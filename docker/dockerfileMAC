# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/engine/reference/builder/

ARG PYTHON_VERSION=3.9
FROM python:${PYTHON_VERSION}-slim as base


# Install dependencies
RUN apt-get update && \
    apt-get install -y \
    wget \
    bzip2 \
    ca-certificates \
    libglib2.0-0 \
    libxext6 \
    libsm6 \
    libxrender1 \
    git \
    gcc \
    g++ \
    make \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh

# Set PATH
ENV PATH=/opt/conda/bin:$PATH

# Install Mamba
RUN conda install -c conda-forge mamba -y

# Clean up
RUN conda clean -a -y

# Activate Mamba environment
SHELL ["mamba", "run", "-n", "base", "/bin/bash", "-c"]RUN apt-get update && apt-get install -y python3-pyqt5 \
	git \
	tk

# Clone necessary repositories and install dependencies
RUN git clone https://github.com/openUC2/ImSwitch /ImSwitch && \
    git clone https://github.com/openUC2/UC2-REST /UC2-REST && \
    git clone https://github.com/openUC2/ImSwitchConfig /ImSwitchConfig


# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.cache/pip to speed up subsequent builds.
# Leverage a bind mount to requirements.txt to avoid having to copy them into
# into this layer.
RUN python -m pip install ImSwitchUC2 
#- -mount=type=cache,target=/root/.cache/pip \ --mount=type=bind,source=/ImSwitch/requirements.txt,target=/ImSwitch/requirements.txt \

RUN --mount=type=cache,target=/root/.cache/pip \ 
	python -m pip install UC2-REST
	
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install --upgrade pip
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install setuptools==58
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install opencv-python
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install imjoy-rpc
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install matplotlib
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install aiortc
RUN --mount=type=cache,target=/root/.cache/pip \
	python -m pip install ashlar




# Switch to the non-privileged user to run the application.
#USER appuser

# Copy the source code into the container.
COPY . .

# Expose the port that the application listens on.
EXPOSE 8000

# Run the application.
#CMD uvicorn '/ImSwitch/main.py' --host=0.0.0.0 --port=8000
ENTRYPOINT ["python3", "/ImSwitch/main.py"] --host=0.0.0.0 --port=8000
